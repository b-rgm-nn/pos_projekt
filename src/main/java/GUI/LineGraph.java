package GUI;

import BL.Value;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author Matthias
 */
public class LineGraph extends javax.swing.JPanel {

    private double sidePadding = 0.2;
    private double topBotPadding = 0.15;

    private int barWidth = 50;

    private List<Value> values;
    private Color color = new Color(0, 255, 0);

    private double maxValue;
    private double minValue;
    
    public LineGraph(List<Value> values) {
        initComponents();

        this.values = values;

        if(values.size() == 0) {
            maxValue = minValue = 0;
        }
        
        
        
        repaint();
    }

    @Override
    public void paint(Graphics g) {
        super.paint(g);
        Graphics2D g2d = (Graphics2D) g;

        int w = (int) (getWidth() * (1 - sidePadding * 2));
        int h = (int) (getHeight() * (1 - topBotPadding * 2));
        int sidePxl = (int) (getWidth() * sidePadding);
        int topPxl = (int) (getHeight() * topBotPadding);
        double yAxisStartValue = maxValue - 2 * (maxValue - minValue);
        double valuePerPxl = (maxValue - yAxisStartValue) / h;
        double stepvaluesize = Math.pow(10, String.valueOf((int) (maxValue - yAxisStartValue)).length()) / 10;
        double steppixelsize = 1.0 / (valuePerPxl / stepvaluesize);

        // y axis
        g2d.setStroke(new BasicStroke(3));
        g2d.setColor(Color.black);
        g2d.drawLine(sidePxl, topPxl + h, sidePxl, topPxl);
        double value = yAxisStartValue;
        for (double i = topPxl + h; i >= topPxl; i -= steppixelsize) {
            g2d.drawLine(sidePxl - 5, (int) i, sidePxl + 5, (int) i);
            g2d.drawString(String.format("%.2f", value), sidePxl - 40, (int) i);
            value += stepvaluesize;
        }

        // x axis
        g2d.drawLine(sidePxl, topPxl + h, sidePxl + w, topPxl + h);
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
